<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>in.keepgrowing</groupId>
		<artifactId>efficient-mvp-example</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>backend</artifactId>
	<name>backend</name>
	<description>The backend module built with Spring Boot</description>

	<properties>
		<java.version>13</java.version>
		<jacoco.version>0.8.6</jacoco.version>
		<sonar.projectKey>little-pinecone_efficient-mvp-example-backend</sonar.projectKey>
		<sonar.projectName>Efficient MVP example (backend)</sonar.projectName>
		<modelmapper.version>2.4.1</modelmapper.version>
		<springdoc.version>1.5.9</springdoc.version>
		<dummy4j.version>0.7.3</dummy4j.version>
		<testcontainers.version>1.15.3</testcontainers.version>
		<openapi-generator.version>5.2.0</openapi-generator.version>
		<maven.clean.version>3.1.0</maven.clean.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>in.keepgrowing</groupId>
			<artifactId>frontend</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<!-- END Security -->

		<!-- Database -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<!-- END Database -->

		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- END of Testing -->

		<!-- Documentation -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-data-rest</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-security</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
		<!-- END of Documentation -->

		<!-- Monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!-- END of Monitoring -->

		<!-- Utilities -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>${modelmapper.version}</version>
		</dependency>
		<dependency>
			<groupId>dev.codesoapbox</groupId>
			<artifactId>dummy4j</artifactId>
			<version>${dummy4j.version}</version>
		</dependency>
		<!-- Dependency for removing IntelliJ warning -->
		<!-- https://youtrack.jetbrains.com/issue/IDEA-225445 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- END of Utilities -->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
						<exclude>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-configuration-processor</artifactId>
						</exclude>
					</excludes>
					<skip>false</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- Code coverage report generation -->
		<profile>
			<id>code-coverage</id>
			<properties>
				<env>test</env>
				<gebEnv>test</gebEnv>
				<jacoco.skip>false</jacoco.skip>
				<maven.test.skip>false</maven.test.skip>
				<skip.unit.tests>false</skip.unit.tests>
				<sonar.exclusions>**/EfficientMvpExampleApplication.java,**/**Config.java</sonar.exclusions>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
					</plugin>
				</plugins>
			</reporting>
		</profile>

		<!--https://codesoapbox.dev/generate-client-code-from-spring-boot-using-maven/-->
		<profile>
			<id>angular</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>reserve-tomcat-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>process-resources</phase>
								<configuration>
									<portNames>
										<portName>tomcat.http.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>pre-integration-test</id>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>post-integration-test</id>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<profiles>
								<profile>dev</profile>
								<profile>angular</profile>
							</profiles>
							<arguments>
								<argument>--server.port=${tomcat.http.port}</argument>
							</arguments>
						</configuration>
					</plugin>
					<plugin>
						<!--https://maven.apache.org/plugins/maven-clean-plugin/examples/delete_additional_files.html-->
						<artifactId>maven-clean-plugin</artifactId>
						<version>${maven.clean.version}</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>../frontend/src/main/angular/src/backend</directory>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.openapitools</groupId>
						<artifactId>openapi-generator-maven-plugin</artifactId>
						<version>${openapi-generator.version}</version>
						<executions>
							<execution>
								<id>angular-client-code-generation</id>
								<phase>integration-test</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<inputSpec>http://localhost:${tomcat.http.port}/v3/api-docs</inputSpec>
									<output>${project.build.directory}/../../frontend/src/main/angular/src/backend</output>
									<generatorName>typescript-angular</generatorName>
									<!--
                                        Use this option to dump the configuration help for the specified generator
                                        instead of generating sources:
                                        <configHelp>true</configHelp>
                                    -->
									<configOptions>
										<!--
                                            Put generator-specific parameters here, e.g. for typescript-angular:
                                            <apiModulePrefix>Backend</apiModulePrefix>
                                         -->
									</configOptions>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
